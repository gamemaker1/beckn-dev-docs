{
    "componentChunkName": "component---src-templates-index-tsx",
    "path": "/overview/transactional-layer",
    "result": {"data":{"mdx":{"id":"229a0406-7ccf-55ac-8698-20b176c6b942","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Transaction Layer\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"transaction-layer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#transaction-layer\",\n    \"aria-label\": \"transaction layer permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"transaction layer\"), mdx(\"h2\", {\n    \"id\": \"topic-summary\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#topic-summary\",\n    \"aria-label\": \"topic summary permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Topic Summary\"), mdx(\"p\", null, \"The Transaction layer consists of Beckn Application Platforms (BAPs), on one\\nside, Beckn Provider Platforms (BPPs), on the other, and Beckn Gateways (BGs),\\nin-between them. BAPs search and find consumer services, BPPs fulfill them, and\\nBGs ensure the discoverability of the BPPs (by the BAPs) on the network and the\\napplication any compliance and regulatory policies.\"), mdx(\"p\", null, \"After a service/offer is chosen (confirmed) by the shopper all subsequent\\ncommunication occurs directly between the BAP and the BPP through asynchronous\\nAPI calls. However, any activities that require real-time data exchange (like\\norder tracking) are performed outside Beckn network.\"), mdx(\"p\", null, \"Beckn network can form different ad-hock virtual topologies based on the needs\\nof the use case at hand.\"), mdx(\"h2\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Overview\"), mdx(\"p\", null, \"The Transaction layer of a Beckn-enabled network is the abstraction that\\nencompasses the network actors and the transactions that occur between them. The\\nTransaction layer itself has three distinct parts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Demand side -- the consumer-facing platforms called \\\"Beckn Application\\nPlatforms\\\" or, for short, \\\"BAPs\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supply side -- the Seller-facing platforms called \\\"Beckn Provider Platforms\\\"\\nor, \\\"BPPs\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Routing infrastructure -- the entities between the supply and demand sides,\\ncalled of \\\"Beckn Gateways\\\" or \\\"BGs\\\", which connect the BAPs and the BPPS\")), mdx(\"p\", null, \"Let's now expound on the roles of each of these parts and see how transactions\\ntake place in this layer.\"), mdx(\"h2\", {\n    \"id\": \"network-actors\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#network-actors\",\n    \"aria-label\": \"network actors permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Network Actors\"), mdx(\"h4\", {\n    \"id\": \"beckn-app-platforms-baps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#beckn-app-platforms-baps\",\n    \"aria-label\": \"beckn app platforms baps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Beckn App Platforms (BAPs)\\xA0\"), mdx(\"p\", null, \"A Beckn Application Platform (BAP) is a server-side infrastructure which\\ncaptures consumers' requests via its UI applications, converts them into\\nBeckn-compliant schemas and APIs at the server side, and fires them at the\\nnetwork. BAPs are the initiator of the transaction and have the flexibility to\\ncommunicate with multiple networks and integrate the responses from these\\nnetworks into a bundled shopper experience. For example, a BAP can book a cab\\nvia an urban mobility network, order a coffee from a restaurant via a\\nlocal-retail network, have it picked up via an order on a delivery network and\\nget it delivered on the way to work. All these three services can be bundled on\\nthe BAP's server end and packaged into a single monolithic experience to the\\nuser via an option called\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Get coffee delivered on the way to work\"), \"\\xA0on the\\nshopper's app. Or a BAP can bundle multiple modes of transport to offer a\\nmulti-mode journey to the a app user. For example, a BAP application can provide\\na cab + metropolitan + bus ride, all in the same booking.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://developers.becknprotocol.io/wp-content/uploads/2021/09/BecknApp.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"Beckn Apps (BAs) are software applications that provide consumer services to the\\nend-user. They take advantage of Beckn's open network infrastructure to offer\\nintegrated experiences that, seamlessly to the shopper, aggregate services from\\ndifferent sources which can reside on different networks. The term \\\"BA\\\" refers\\nto any shopping software platform or software package on a Beckn-enabled network\\nwhich has a consumer interface. Some examples of BAs are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mobile apps\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Desktop application\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Browser apps\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Voice assistants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wearable devices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NLP applications\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chat-bots\")), mdx(\"p\", null, \"A BA has:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An API to interface with the Beckn Gateway as part of the application cloud\\n(Beckn App API)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consumer UI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The application cloud\")), mdx(\"p\", null, \"A BA can be set up by any organization which intends to offer integrated,\\nlocation-aware services to consumers. The implementation is done over the Beckn\\nprotocol specifications.\"), mdx(\"h4\", {\n    \"id\": \"beckn-provider-platforms-bpps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#beckn-provider-platforms-bpps\",\n    \"aria-label\": \"beckn provider platforms bpps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Beckn Provider Platforms (BPPs)\"), mdx(\"p\", null, \"The other side of the network is the supply side which consists of Beckn\\nProvider Platforms (BPPs). These are the platforms which implement the supply\\nlogic and present it in the form of a Provider Catalog. The BPP can be a single\\nprovider with a Beckn API implementation or an aggregator of merchants -- this,\\nof course, depends upon the logic of the particular implementation.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://developers.becknprotocol.io/wp-content/uploads/2021/09/BecknProvider.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"A Beckn Provider (BP) -- a business or non-profit entity that supplies services\\nvia BPP -- can be any organization that owns, operates or manages an inventory\\nof one or more services. BPs may be required to register with the national or\\nlocal authorities and be regulated by them. Some examples of BPs are,\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public transportation companies like metropolitan services, bus services,\\nride-hailing services, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Restaurants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Final-mile delivery services for food and groceries\")), mdx(\"p\", null, \"A BPP has:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An API to accept requests from BGs as part of the application cloud (Beckn\\nProvider API)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Service personnel UI. This is optional and may not be required for all cases.\\nFor example, a bike rental might not require a user interface, whereas a cab\\nservice may require a driver app.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An application cloud to store inventory data\")), mdx(\"p\", null, \"The implementation of the Beckn Provider API is done over the Beckn protocol\\nspecifications.\"), mdx(\"h4\", {\n    \"id\": \"beckn-gateways-bgs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#beckn-gateways-bgs\",\n    \"aria-label\": \"beckn gateways bgs permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Beckn Gateways (BGs)\"), mdx(\"p\", null, \"Between BAPs and BPPs are the Beckn Gateways, which form the routing\\ninfrastructure of the Transaction layer. BGs are extremely lean and stateless\\nrouting servers. The purpose of this infrastructure is to route requests from\\nthe BAP to the BPPs, and from the BPPs back to the BAP. The BG takes a request\\nfrom the BAP, determines to which BPPs the message needs to forwarded and\\nmulticasts the message to them. Apart from that, it can also implement optional\\nfeatures like payments, registry services, and can also emit Open Data (OData).\\n(The OData specification for Beckn is currently under development.)\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://developers.becknprotocol.io/wp-content/uploads/2021/08/beckn-gateway.jpg\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"A Beckn Gateway (BG) is an organization that offers these functionalities:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Routing of requests from Beckn Apps to Beckn Providers and vice versa\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BAP request filtering by identifying BPPs based on the Context of the request\")), mdx(\"p\", null, \"The purpose of a BG is to allow all BPPs on the Beckn network to have a fair\\nchance to be discovered by any BAP. The BG broadcast the search request to all\\nlisted and active BPPs on the network registry, which ensures fair and equal\\naccess to any participant. Furthermore, there is a post-discovery lifecycle that\\noccurs directly between the BAP and BPP after the BAP has chosen the BPP to\\nfulfill the BAP's Intent (the BAP's search).\"), mdx(\"p\", null, \"A BG has:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A cloud infrastructure with services to implement the above functionalities.\\nThe implementation is done over the Beckn protocol specifications.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An API to accept requests from BAs (Beckn Gateway API).\")), mdx(\"p\", null, \"BGs validate and filter all requests based on the national and local governance\\npolicies. They can also optionally collect payments from the BAs' users, and\\nsettle disputes among BAPs and BPPs through a process of clearing.\"), mdx(\"p\", null, \"Any organization with infrastructure to provide the above functionalities\\n(preferably organizations that own infrastructure with high computational\\ncapacities) can be a BG. Such organizations may be regulated entities registered\\nwith the national and/or local authorities.\"), mdx(\"h2\", {\n    \"id\": \"api-communication\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api-communication\",\n    \"aria-label\": \"api communication permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"API Communication\"), mdx(\"p\", null, \"All Transaction APIs communicate between the BAP and the BPP, with the exception\\nof the Discovery API. All request messages are non-blocking and are immediately\\nacknowledged with an\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ACK\"), \"\\xA0or a\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"NACK\"), \"\\xA0message in the same session. The response\\nmessage is in the form of a callback. Each callback, too, is immediately\\nresponded to with an\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ACK\"), \"\\xA0or a\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"NACK\"), \"\\xA0message in the same callback session. All\\nmessages are serialized in JSON.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://developers.becknprotocol.io/wp-content/uploads/2021/09/api-communication.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"An exception to this flow is order tracking in real time. Real-time tracking\\ndata is not routed through the Beckn networks. Because tracking involves\\ncontinuous streams of data through an open socket, it will not be routed through\\nthe BG. The same exception applies to any real-time communication between the BP\\nand the BA, like chat or cold calling. In these cases, only the data source\\ninformation about the real-time tracking is transmitted through the BG. For\\nexample, in the case of vehicle tracking, only the tracking URL is transmitted\\nvia the BG and not the tracking data itself.\"), mdx(\"h2\", {\n    \"id\": \"network-topologies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#network-topologies\",\n    \"aria-label\": \"network topologies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Network Topologies\"), mdx(\"p\", null, \"Beckn-enabled networks form various configurations depending on the nature of\\nthe integration of the use cases involved. For example, when a shopper wants\\nfood delivered to their home, there are two networks which are accessed:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Local Retail network -- for placing the order for the food\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Final-Mile Delivery network -- for picking up the food package from the\\nrestaurant/store and delivering it to the shopper\")), mdx(\"p\", null, \"One way to fulfill this use case is for the customer-facing BAP to use the Local\\nRetail network to order food, while accessing the final mile delivery network in\\nparallel and placing a delivery request there:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://developers.becknprotocol.io/wp-content/uploads/2021/08/network-topologist.jpg\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"Alternatively, the Local Retail BPP may act as a BAP and place the delivery\\nrequest to the Final Mile Delivery network in a cascaded manner like this:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://developers.becknprotocol.io/wp-content/uploads/2021/08/network-topologist-2.jpg\",\n    \"alt\": null\n  })));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"229a0406-7ccf-55ac-8698-20b176c6b942"}},
    "staticQueryHashes": ["2206682926","2332735771"]}