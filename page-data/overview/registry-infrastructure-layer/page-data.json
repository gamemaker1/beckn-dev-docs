{
    "componentChunkName": "component---src-templates-index-tsx",
    "path": "/overview/registry-infrastructure-layer",
    "result": {"data":{"mdx":{"id":"cd42fb05-8d79-5bfb-8ec1-c74ff944736a","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The Registry Infrastructure\",\n  \"order\": 3\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"registry-infrastructure-layer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#registry-infrastructure-layer\",\n    \"aria-label\": \"registry infrastructure layer permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"registry infrastructure layer\"), mdx(\"h2\", {\n    \"id\": \"topic-summary\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#topic-summary\",\n    \"aria-label\": \"topic summary permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Topic Summary\"), mdx(\"p\", null, \"The\\xA0Registry Infrastructure layer comprises\\xA0a network of open registries that\\nstore detailed information about every network participant. The registries are\\nmaintained by entities called \\\"network registrars\\\".\"), mdx(\"p\", null, \"The candidates for BAPs or BPPs submit the relevant credentials to a network\\nregistrar and, until approved, have the status of registrants. Approved\\nregistrants obtain INITIATED status and are called \\\"subscribers\\\".\"), mdx(\"p\", null, \"The Registry Infrastructure layer consists of a network of open registries that\\nstore detailed information about every network\\nparticipant.\\xA0\\xA0\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://developers.becknprotocol.io/wp-content/uploads/2021/08/Registry-Infrastructure-Layer.jpg\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"To get listed on a registry, there is a there is a procedure which is mandatory\\nfor every network participant. The registration (in terms of requirements) is\\nspecific to each Beckn-enabled network.\\xA0The actors in the Registry\\nInfrastructure layer are the\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Network registrar(s) -- the registrar is a trusted entity that maintains the\\nregistry of the participants on the network. Registrars can be formed by the\\nparticipants of the network or by a public authority; this depends on nature\\nof the network. A network can have more than one registrars, all operating by\\nthe same rules.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Registrant -- any business or non-profit entity that wants its platform to be\\nlisted on the Registry. To be listed, the registrant must submit relevant\\ncredentials to a network registrar. A registrant can apply to be a Beckn\\nApplication Platform (BAP), Beckn Provider Platform (BPP), or Beckn Gateway\\n(BG).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subscriber -- after the registrant is approved by the registrar, it is listed\\non the registry with INITIATED status. From this moment on, the entity being\\nregistered in no longer a registrant and becomes a subscriber. The subscriber\\nstatus gives the entity the right to perform transactions on the network.\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://developers.becknprotocol.io/wp-content/uploads/2021/08/Registry-Infrastructure-Layer-2.jpg\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"This a sample subscriber record in a registry database:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://developers.becknprotocol.io/wp-content/uploads/2021/08/Registry-Infrastructure-Layer-3.jpg\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"Any receiver of an API request must authenticate the sender by looking up the\\nnetwork registry and verify the signature of the sender through the sender's\\npublic key.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"cd42fb05-8d79-5bfb-8ec1-c74ff944736a"}},
    "staticQueryHashes": ["1912197102","2332735771"]}